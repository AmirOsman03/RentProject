{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport '../assets/css/register.css';\nexport default {\n  name: \"RegisterPage\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      registerError: false,\n      users: [{\n        username: \"admin\",\n        password: \"admin\"\n      }, {\n        username: \"user\",\n        password: \"user\"\n      }]\n    };\n  },\n  methods: {\n    handleRegister() {\n      if (this.password !== this.confirmPassword) {\n        this.registerError = true;\n        setTimeout(() => {\n          this.registerError = false;\n        }, 2000);\n        return;\n      }\n      const userExists = this.users.find(user => user.username === this.username);\n      if (!userExists) {\n        this.users.push({\n          username: this.username,\n          password: this.password\n        });\n        localStorage.setItem(\"user\", JSON.stringify({\n          username: this.username\n        }));\n        this.$router.push(\"/home\");\n      } else {\n        this.registerError = true;\n        setTimeout(() => {\n          this.registerError = false;\n        }, 2000);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","password","confirmPassword","registerError","users","methods","handleRegister","setTimeout","userExists","find","user","push","localStorage","setItem","JSON","stringify","$router"],"sources":["src/views/RegisterPage.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <transition name=\"fade-scale\">\n      <div class=\"register-card\">\n        <h1 class=\"title\">Create Account</h1>\n\n        <form @submit.prevent=\"handleRegister\">\n          <div class=\"input-group\">\n            <input type=\"text\" v-model=\"username\" required placeholder=\"Username\" />\n          </div>\n          <div class=\"input-group\">\n            <input type=\"password\" v-model=\"password\" required placeholder=\"Password\" />\n          </div>\n          <div class=\"input-group\">\n            <input type=\"password\" v-model=\"confirmPassword\" required placeholder=\"Confirm Password\" />\n          </div>\n\n          <button type=\"submit\" class=\"register-button\">Sign Up</button>\n        </form>\n\n        <transition name=\"shake\">\n          <div v-if=\"registerError\" class=\"error-msg\">\n            Passwords do not match or something went wrong.\n          </div>\n        </transition>\n\n        <p class=\"login-text\">\n          Already have an account?\n          <router-link to=\"/login\">Login</router-link>\n        </p>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport '../assets/css/register.css'\nexport default {\n  name: \"RegisterPage\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      registerError: false,\n      users: [\n        { username: \"admin\", password: \"admin\" },\n        { username: \"user\", password: \"user\" },\n      ],\n    };\n  },\n  methods: {\n    handleRegister() {\n      if (this.password !== this.confirmPassword) {\n        this.registerError = true;\n        setTimeout(() => {\n          this.registerError = false;\n        }, 2000);\n        return;\n      }\n\n      const userExists = this.users.find(user => user.username === this.username);\n      if (!userExists) {\n        this.users.push({ username: this.username, password: this.password });\n        localStorage.setItem(\"user\", JSON.stringify({ username: this.username }));\n        this.$router.push(\"/home\");\n      } else {\n        this.registerError = true;\n        setTimeout(() => {\n          this.registerError = false;\n        }, 2000);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Gradient Background */\n\n</style>\n"],"mappings":";;;AAoCA;AACA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,eAAA;MACAC,aAAA;MACAC,KAAA,GACA;QAAAJ,QAAA;QAAAC,QAAA;MAAA,GACA;QAAAD,QAAA;QAAAC,QAAA;MAAA;IAEA;EACA;EACAI,OAAA;IACAC,eAAA;MACA,SAAAL,QAAA,UAAAC,eAAA;QACA,KAAAC,aAAA;QACAI,UAAA;UACA,KAAAJ,aAAA;QACA;QACA;MACA;MAEA,MAAAK,UAAA,QAAAJ,KAAA,CAAAK,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAV,QAAA,UAAAA,QAAA;MACA,KAAAQ,UAAA;QACA,KAAAJ,KAAA,CAAAO,IAAA;UAAAX,QAAA,OAAAA,QAAA;UAAAC,QAAA,OAAAA;QAAA;QACAW,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA;UAAAf,QAAA,OAAAA;QAAA;QACA,KAAAgB,OAAA,CAAAL,IAAA;MACA;QACA,KAAAR,aAAA;QACAI,UAAA;UACA,KAAAJ,aAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}