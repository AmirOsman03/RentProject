{"ast":null,"code":"import CarService from '../services/CarService';\nexport default {\n  name: 'CarList',\n  data() {\n    return {\n      cars: [],\n      // Празен список на автомобили\n      isModalOpen: false,\n      // Статус на модалното прозорче\n      selectedCar: null,\n      // Избран автомобил за резервација\n      startDate: '',\n      endDate: ''\n    };\n  },\n  methods: {\n    getCars() {\n      CarService.getCars().then(response => {\n        this.cars = response.data; // Ако повикот е успешен, постави ги автомобилите\n      }).catch(error => {\n        console.error(\"There was an error retrieving cars:\", error);\n      });\n    },\n    openModal(car) {\n      this.selectedCar = car; // Постави го избраниот автомобил\n      this.isModalOpen = true; // Отвори го модалното прозорче\n    },\n    closeModal() {\n      this.isModalOpen = false; // Затвори го модалното прозорче\n      this.startDate = ''; // Ресетирај ги полето за датуми\n      this.endDate = '';\n    },\n    submitForm() {\n      // Логика за обработка на податоците, како што е испраќање на резервацијата на сервер\n      console.log(\"Reservation for car:\", this.selectedCar);\n      console.log(\"Start date:\", this.startDate);\n      console.log(\"End date:\", this.endDate);\n\n      // Затвори ја формата по успешен поднесок\n      this.closeModal();\n    }\n  },\n  created() {\n    this.getCars(); // Повикувај го getCars кога компонентата ќе се создаде\n  }\n};","map":{"version":3,"names":["CarService","name","data","cars","isModalOpen","selectedCar","startDate","endDate","methods","getCars","then","response","catch","error","console","openModal","car","closeModal","submitForm","log","created"],"sources":["src/views/Cars.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1 class=\"text-center mb-4\">Cars</h1>\n    <div class=\"row\">\n      <div class=\"col-12 col-md-4\" v-for=\"car in cars\" :key=\"car.id\">\n        <div class=\"card shadow-lg mb-4 rounded\">\n          <img :src=\"car.image\" class=\"card-img-top\" alt=\"Car image\">\n          <div class=\"card-body\">\n            <!-- Бренд и модел -->\n            <h5 class=\"car-title\">\n              <span class=\"car-brand\">{{ car.brand }}</span> <span class=\"car-model\">{{ car.model }}</span>\n            </h5>\n            <!-- Останати детали -->\n            <p class=\"card-text\">\n              <strong>Type:</strong> {{ car.type }} <br>\n              <strong>Year:</strong> {{ car.productionYear }} <br>\n              <strong>Price:</strong> ${{ car.price }}\n            </p>\n            <!-- Копче за резервација -->\n            <button class=\"btn btn-primary w-100\" @click=\"openModal(car)\">Book Now</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Модално прозорче за резервација -->\n    <div v-if=\"isModalOpen\" class=\"modal-overlay\">\n      <div class=\"modal-content\">\n        <h2>Reservation for {{ selectedCar.brand }} {{ selectedCar.model }}</h2>\n        <form @submit.prevent=\"submitForm\">\n          <div class=\"form-group\">\n            <label for=\"start-date\">Start Date</label>\n            <input type=\"date\" id=\"start-date\" v-model=\"startDate\" required />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"end-date\">End Date</label>\n            <input type=\"date\" id=\"end-date\" v-model=\"endDate\" required />\n          </div>\n          <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n          <button @click=\"closeModal\" type=\"button\" class=\"btn btn-secondary\">Close</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CarService from '../services/CarService';\n\nexport default {\n  name: 'CarList',\n  data() {\n    return {\n      cars: [], // Празен список на автомобили\n      isModalOpen: false, // Статус на модалното прозорче\n      selectedCar: null, // Избран автомобил за резервација\n      startDate: '',\n      endDate: ''\n    };\n  },\n  methods: {\n    getCars() {\n      CarService.getCars().then((response) => {\n        this.cars = response.data; // Ако повикот е успешен, постави ги автомобилите\n      }).catch((error) => {\n        console.error(\"There was an error retrieving cars:\", error);\n      });\n    },\n    openModal(car) {\n      this.selectedCar = car; // Постави го избраниот автомобил\n      this.isModalOpen = true; // Отвори го модалното прозорче\n    },\n    closeModal() {\n      this.isModalOpen = false; // Затвори го модалното прозорче\n      this.startDate = ''; // Ресетирај ги полето за датуми\n      this.endDate = '';\n    },\n    submitForm() {\n      // Логика за обработка на податоците, како што е испраќање на резервацијата на сервер\n      console.log(\"Reservation for car:\", this.selectedCar);\n      console.log(\"Start date:\", this.startDate);\n      console.log(\"End date:\", this.endDate);\n\n      // Затвори ја формата по успешен поднесок\n      this.closeModal();\n    }\n  },\n  created() {\n    this.getCars(); // Повикувај го getCars кога компонентата ќе се создаде\n  }\n};\n</script>\n\n<style scoped>\n/* Модално прозорче */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5); /* Полупровидна позадина */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  width: 400px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n}\n\nbutton {\n  margin-top: 10px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.card {\n  border: none;\n  border-radius: 10px;\n  overflow: hidden;\n  background: #f8f9fa;\n}\n\n.card-img-top {\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n}\n\n.card-body {\n  padding: 20px;\n  text-align: center;\n}\n\n.car-title {\n  font-size: 1.5rem;\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 15px;\n}\n\n.car-brand {\n  color: #343a40; /* Тёмно сива боја */\n}\n\n.car-model {\n  color: #17a2b8; /* Плаво-сино боја */\n  font-style: italic;\n}\n\n.card-text {\n  font-size: 1rem;\n  color: #555;\n}\n\nbutton {\n  margin-top: 15px;\n  border-radius: 25px;\n  padding: 10px;\n  font-size: 1.1rem;\n  background-color: #007bff;\n  border: none;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n  cursor: pointer;\n}\n</style>\n"],"mappings":"AA+CA,OAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MAAA;MACAC,WAAA;MAAA;MACAC,WAAA;MAAA;MACAC,SAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACAT,UAAA,CAAAS,OAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAR,IAAA,GAAAQ,QAAA,CAAAT,IAAA;MACA,GAAAU,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,wCAAAA,KAAA;MACA;IACA;IACAE,UAAAC,GAAA;MACA,KAAAX,WAAA,GAAAW,GAAA;MACA,KAAAZ,WAAA;IACA;IACAa,WAAA;MACA,KAAAb,WAAA;MACA,KAAAE,SAAA;MACA,KAAAC,OAAA;IACA;IACAW,WAAA;MACA;MACAJ,OAAA,CAAAK,GAAA,8BAAAd,WAAA;MACAS,OAAA,CAAAK,GAAA,qBAAAb,SAAA;MACAQ,OAAA,CAAAK,GAAA,mBAAAZ,OAAA;;MAEA;MACA,KAAAU,UAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAX,OAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}