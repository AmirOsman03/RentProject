{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  name: \"CarList\",\n  data() {\n    return {\n      cars: [\n        // Your car objects remain the same\n      ],\n      selectedType: \"\",\n      selectedFuelType: \"\",\n      showModal: false,\n      showEditModal: false,\n      selectedCar: null,\n      editedCar: {},\n      startDate: \"\",\n      endDate: \"\",\n      currentUser: {\n        role: \"admin\" // Change to \"user\" to test non-admin access\n      }\n    };\n  },\n  computed: {\n    filteredCars() {\n      return this.cars.filter(car => {\n        const matchesType = !this.selectedType || car.type === this.selectedType;\n        const matchesFuelType = !this.selectedFuelType || car.fuelType === this.selectedFuelType;\n        return matchesType && matchesFuelType;\n      });\n    },\n    totalPrice() {\n      if (this.startDate && this.endDate && this.selectedCar) {\n        const start = new Date(this.startDate);\n        const end = new Date(this.endDate);\n        const timeDiff = end - start; // Difference in milliseconds\n        const dayCount = timeDiff / (1000 * 3600 * 24); // Convert to days\n        if (dayCount < 1) return 0; // If the selected dates don't span at least 1 day\n        return this.selectedCar.price * dayCount; // Calculate total price\n      }\n      return 0;\n    }\n  },\n  methods: {\n    openModal(car) {\n      this.selectedCar = car;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n      this.startDate = \"\";\n      this.endDate = \"\";\n      this.selectedCar = null;\n    },\n    openEditModal(car) {\n      this.editedCar = {\n        ...car\n      }; // Make a copy of the car to edit\n      this.showEditModal = true;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n      this.editedCar = {};\n    },\n    saveEditedCar() {\n      const carIndex = this.cars.findIndex(car => car.id === this.editedCar.id);\n      if (carIndex !== -1) {\n        this.cars[carIndex] = {\n          ...this.editedCar\n        };\n      }\n      this.closeEditModal();\n    },\n    confirmBooking() {\n      if (!this.startDate || !this.endDate) {\n        alert(\"Please select both start and end dates for the booking.\");\n        return;\n      }\n      if (this.endDate < this.startDate) {\n        alert(\"End date cannot be earlier than start date.\");\n        return;\n      }\n      const confirmation = window.confirm(`Are you sure you want to book from ${this.startDate} to ${this.endDate}?`);\n      if (confirmation) {\n        alert(`You have successfully booked the ${this.selectedCar.brand} ${this.selectedCar.model}`);\n        this.closeModal();\n      } else {\n        alert(\"Booking canceled.\");\n      }\n    },\n    deleteCar(carId) {\n      this.cars = this.cars.filter(car => car.id !== carId);\n    }\n  }\n};","map":{"version":3,"names":["name","data","cars","selectedType","selectedFuelType","showModal","showEditModal","selectedCar","editedCar","startDate","endDate","currentUser","role","computed","filteredCars","filter","car","matchesType","type","matchesFuelType","fuelType","totalPrice","start","Date","end","timeDiff","dayCount","price","methods","openModal","closeModal","openEditModal","closeEditModal","saveEditedCar","carIndex","findIndex","id","confirmBooking","alert","confirmation","window","confirm","brand","model","deleteCar","carId"],"sources":["src/views/Cars.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1 class=\"text-center mb-4\">Cars</h1>\n\n    <!-- Filter by Car Type -->\n    <div class=\"form-group\">\n      <label for=\"carType\">Filter by Type:</label>\n      <select v-model=\"selectedType\" class=\"form-control\" id=\"carType\">\n        <option value=\"\">All</option>\n        <option value=\"COUPE\">COUPE</option>\n        <option value=\"SEDAN\">SEDAN</option>\n        <option value=\"HATCHBACK\">HATCHBACK</option>\n        <option value=\"SUV\">SUV</option>\n      </select>\n    </div>\n\n    <!-- Filter by Fuel Type -->\n    <div class=\"form-group mt-3\">\n      <label for=\"fuelType\">Filter by Fuel Type:</label>\n      <select v-model=\"selectedFuelType\" class=\"form-control\" id=\"fuelType\">\n        <option value=\"\">All</option>\n        <option value=\"Petrol\">Petrol</option>\n        <option value=\"Diesel\">Diesel</option>\n        <option value=\"Hybrid\">Hybrid</option>\n      </select>\n    </div>\n\n    <!-- Displaying Cars -->\n    <div class=\"row mt-4\">\n      <div class=\"col-12 col-md-4\" v-for=\"car in filteredCars\" :key=\"car.id\">\n        <div class=\"card shadow-lg mb-4 rounded\">\n          <img\n            :src=\"require(`@/assets/images/${car.image}`)\"\n            class=\"card-img-top\"\n            alt=\"Car image\"\n          />\n          <div class=\"card-body\">\n            <h5 class=\"car-title\">\n              <span class=\"car-brand\">{{ car.brand }}</span>\n              <span class=\"car-model\">{{ car.model }}</span>\n            </h5>\n            <p class=\"card-text\">\n              <strong>Type:</strong> {{ car.type }} <br />\n              <strong>Year:</strong> {{ car.productionYear }} <br />\n              <strong>Price:</strong> ${{ car.price }} <br />\n              <strong>Location:</strong> {{ car.location }} <br />\n              <strong>Fuel Type:</strong> {{ car.fuelType }} <br />\n            </p>\n            <button class=\"btn btn-primary w-100\" @click=\"openModal(car)\">\n              Book Now\n            </button>\n            <button\n              v-if=\"currentUser.role === 'admin'\"\n              class=\"btn btn-warning w-100 mt-2\"\n              @click=\"openEditModal(car)\"\n            >\n              Edit\n            </button>\n            <button\n              v-if=\"currentUser.role === 'admin'\"\n              class=\"btn btn-danger w-100 mt-2\"\n              @click=\"deleteCar(car.id)\"\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal for Editing Car Details -->\n    <div\n      v-if=\"showEditModal\"\n      class=\"modal fade show\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"editCarModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content card shadow-lg rounded p-4 animate-fade-in\">\n          <div class=\"modal-body\">\n            <h6>Edit Car Details</h6>\n            <form @submit.prevent=\"saveEditedCar\">\n              <div class=\"form-group\">\n                <label for=\"editBrand\">Brand</label>\n                <input\n                  type=\"text\"\n                  id=\"editBrand\"\n                  v-model=\"editedCar.brand\"\n                  class=\"form-control\"\n                  required\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"editModel\">Model</label>\n                <input\n                  type=\"text\"\n                  id=\"editModel\"\n                  v-model=\"editedCar.model\"\n                  class=\"form-control\"\n                  required\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"editPrice\">Price</label>\n                <input\n                  type=\"number\"\n                  id=\"editPrice\"\n                  v-model=\"editedCar.price\"\n                  class=\"form-control\"\n                  required\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"editType\">Type</label>\n                <select\n                  v-model=\"editedCar.type\"\n                  class=\"form-control\"\n                  id=\"editType\"\n                  required\n                >\n                  <option value=\"COUPE\">COUPE</option>\n                  <option value=\"SEDAN\">SEDAN</option>\n                  <option value=\"HATCHBACK\">HATCHBACK</option>\n                  <option value=\"SUV\">SUV</option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"editFuelType\">Fuel Type</label>\n                <select\n                  v-model=\"editedCar.fuelType\"\n                  class=\"form-control\"\n                  id=\"editFuelType\"\n                  required\n                >\n                  <option value=\"Petrol\">Petrol</option>\n                  <option value=\"Diesel\">Diesel</option>\n                  <option value=\"Hybrid\">Hybrid</option>\n                </select>\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer justify-content-center\">\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary rounded-pill\"\n              @click=\"closeEditModal\"\n            >\n              Close\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-success rounded-pill\"\n              @click=\"saveEditedCar\"\n            >\n              Save Changes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal for Booking Dates -->\n    <div\n      v-if=\"showModal\"\n      class=\"modal fade show\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <!-- Booking modal code remains the same -->\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CarList\",\n  data() {\n    return {\n      cars: [\n        // Your car objects remain the same\n      ],\n      selectedType: \"\",\n      selectedFuelType: \"\",\n      showModal: false,\n      showEditModal: false,\n      selectedCar: null,\n      editedCar: {},\n      startDate: \"\",\n      endDate: \"\",\n      currentUser: {\n        role: \"admin\", // Change to \"user\" to test non-admin access\n      },\n    };\n  },\n  computed: {\n    filteredCars() {\n      return this.cars.filter((car) => {\n        const matchesType =\n          !this.selectedType || car.type === this.selectedType;\n        const matchesFuelType =\n          !this.selectedFuelType || car.fuelType === this.selectedFuelType;\n        return matchesType && matchesFuelType;\n      });\n    },\n    totalPrice() {\n      if (this.startDate && this.endDate && this.selectedCar) {\n        const start = new Date(this.startDate);\n        const end = new Date(this.endDate);\n        const timeDiff = end - start; // Difference in milliseconds\n        const dayCount = timeDiff / (1000 * 3600 * 24); // Convert to days\n        if (dayCount < 1) return 0; // If the selected dates don't span at least 1 day\n        return this.selectedCar.price * dayCount; // Calculate total price\n      }\n      return 0;\n    },\n  },\n  methods: {\n    openModal(car) {\n      this.selectedCar = car;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n      this.startDate = \"\";\n      this.endDate = \"\";\n      this.selectedCar = null;\n    },\n    openEditModal(car) {\n      this.editedCar = { ...car }; // Make a copy of the car to edit\n      this.showEditModal = true;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n      this.editedCar = {};\n    },\n    saveEditedCar() {\n      const carIndex = this.cars.findIndex((car) => car.id === this.editedCar.id);\n      if (carIndex !== -1) {\n        this.cars[carIndex] = { ...this.editedCar };\n      }\n      this.closeEditModal();\n    },\n    confirmBooking() {\n      if (!this.startDate || !this.endDate) {\n        alert(\"Please select both start and end dates for the booking.\");\n        return;\n      }\n      if (this.endDate < this.startDate) {\n        alert(\"End date cannot be earlier than start date.\");\n        return;\n      }\n      const confirmation = window.confirm(\n        `Are you sure you want to book from ${this.startDate} to ${this.endDate}?`\n      );\n      if (confirmation) {\n        alert(\n          `You have successfully booked the ${this.selectedCar.brand} ${this.selectedCar.model}`\n        );\n        this.closeModal();\n      } else {\n        alert(\"Booking canceled.\");\n      }\n    },\n    deleteCar(carId) {\n      this.cars = this.cars.filter((car) => car.id !== carId);\n    },\n  },\n};\n</script>\n"],"mappings":";;AAkLA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACA;MAAA,CACA;MACAC,YAAA;MACAC,gBAAA;MACAC,SAAA;MACAC,aAAA;MACAC,WAAA;MACAC,SAAA;MACAC,SAAA;MACAC,OAAA;MACAC,WAAA;QACAC,IAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,aAAA;MACA,YAAAZ,IAAA,CAAAa,MAAA,CAAAC,GAAA;QACA,MAAAC,WAAA,GACA,MAAAd,YAAA,IAAAa,GAAA,CAAAE,IAAA,UAAAf,YAAA;QACA,MAAAgB,eAAA,GACA,MAAAf,gBAAA,IAAAY,GAAA,CAAAI,QAAA,UAAAhB,gBAAA;QACA,OAAAa,WAAA,IAAAE,eAAA;MACA;IACA;IACAE,WAAA;MACA,SAAAZ,SAAA,SAAAC,OAAA,SAAAH,WAAA;QACA,MAAAe,KAAA,OAAAC,IAAA,MAAAd,SAAA;QACA,MAAAe,GAAA,OAAAD,IAAA,MAAAb,OAAA;QACA,MAAAe,QAAA,GAAAD,GAAA,GAAAF,KAAA;QACA,MAAAI,QAAA,GAAAD,QAAA;QACA,IAAAC,QAAA;QACA,YAAAnB,WAAA,CAAAoB,KAAA,GAAAD,QAAA;MACA;MACA;IACA;EACA;EACAE,OAAA;IACAC,UAAAb,GAAA;MACA,KAAAT,WAAA,GAAAS,GAAA;MACA,KAAAX,SAAA;IACA;IACAyB,WAAA;MACA,KAAAzB,SAAA;MACA,KAAAI,SAAA;MACA,KAAAC,OAAA;MACA,KAAAH,WAAA;IACA;IACAwB,cAAAf,GAAA;MACA,KAAAR,SAAA;QAAA,GAAAQ;MAAA;MACA,KAAAV,aAAA;IACA;IACA0B,eAAA;MACA,KAAA1B,aAAA;MACA,KAAAE,SAAA;IACA;IACAyB,cAAA;MACA,MAAAC,QAAA,QAAAhC,IAAA,CAAAiC,SAAA,CAAAnB,GAAA,IAAAA,GAAA,CAAAoB,EAAA,UAAA5B,SAAA,CAAA4B,EAAA;MACA,IAAAF,QAAA;QACA,KAAAhC,IAAA,CAAAgC,QAAA;UAAA,QAAA1B;QAAA;MACA;MACA,KAAAwB,cAAA;IACA;IACAK,eAAA;MACA,UAAA5B,SAAA,UAAAC,OAAA;QACA4B,KAAA;QACA;MACA;MACA,SAAA5B,OAAA,QAAAD,SAAA;QACA6B,KAAA;QACA;MACA;MACA,MAAAC,YAAA,GAAAC,MAAA,CAAAC,OAAA,CACA,2CAAAhC,SAAA,YAAAC,OAAA,GACA;MACA,IAAA6B,YAAA;QACAD,KAAA,CACA,yCAAA/B,WAAA,CAAAmC,KAAA,SAAAnC,WAAA,CAAAoC,KAAA,EACA;QACA,KAAAb,UAAA;MACA;QACAQ,KAAA;MACA;IACA;IACAM,UAAAC,KAAA;MACA,KAAA3C,IAAA,QAAAA,IAAA,CAAAa,MAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAoB,EAAA,KAAAS,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}