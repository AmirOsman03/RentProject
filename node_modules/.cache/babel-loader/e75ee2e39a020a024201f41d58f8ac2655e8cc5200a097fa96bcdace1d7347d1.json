{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'NavbarPage',\n  data() {\n    return {\n      isLoggedIn: false,\n      currentUser: '',\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginError: ''\n    };\n  },\n  methods: {\n    // Handle login form submission\n    handleLogin() {\n      const {\n        username,\n        password\n      } = this.loginForm;\n\n      // Default users and password\n      const validUsers = {\n        user: 'admin',\n        admin: 'admin'\n      };\n\n      // Check if the username exists and the password matches\n      if (validUsers[username] && validUsers[username] === password) {\n        this.isLoggedIn = true;\n        this.currentUser = username;\n        localStorage.setItem('user', username); // Save user to localStorage\n        this.loginError = ''; // Clear any previous error\n        this.$router.push('/home'); // Redirect to home page after login\n      } else {\n        this.loginError = 'Invalid username or password';\n      }\n    },\n    logout() {\n      this.isLoggedIn = false;\n      this.currentUser = '';\n      localStorage.removeItem('user'); // Remove user from localStorage\n      this.$router.push('/login'); // Redirect to login page after logout\n    }\n  },\n  created() {\n    // Check if the user is logged in when the component is created\n    const user = localStorage.getItem('user');\n    if (user) {\n      this.isLoggedIn = true;\n      this.currentUser = user;\n    }\n  }\n};","map":{"version":3,"names":["name","data","isLoggedIn","currentUser","loginForm","username","password","loginError","methods","handleLogin","validUsers","user","admin","localStorage","setItem","$router","push","logout","removeItem","created","getItem"],"sources":["src/views/Navbar.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Navigation Bar -->\n    <nav>\n      <ul>\n        <li><router-link to=\"/home\">Home</router-link></li>\n        <li><router-link to=\"/cars\">Cars</router-link></li>\n        <li><router-link to=\"/about_us\">About Us</router-link></li>\n        <!-- Push this li to the right -->\n        <li v-if=\"!isLoggedIn\">\n          <router-link to=\"/login\">Login</router-link>\n        </li>\n        <li v-else style=\"margin-left: auto;\">\n          <span style=\"color: white; font-weight: bold;\">Welcome, {{ currentUser }}</span>\n          <button @click=\"logout\" style=\"background: none; border: none; color: white; font-weight: bold; cursor: pointer;\">Logout</button>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'NavbarPage',\n  data() {\n    return {\n      isLoggedIn: false,\n      currentUser: '',\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginError: ''\n    };\n  },\n  methods: {\n    // Handle login form submission\n    handleLogin() {\n      const { username, password } = this.loginForm;\n\n      // Default users and password\n      const validUsers = {\n        user: 'admin',\n        admin: 'admin'\n      };\n\n      // Check if the username exists and the password matches\n      if (validUsers[username] && validUsers[username] === password) {\n        this.isLoggedIn = true;\n        this.currentUser = username;\n        localStorage.setItem('user', username); // Save user to localStorage\n        this.loginError = ''; // Clear any previous error\n        this.$router.push('/home'); // Redirect to home page after login\n      } else {\n        this.loginError = 'Invalid username or password';\n      }\n    },\n    logout() {\n      this.isLoggedIn = false;\n      this.currentUser = '';\n      localStorage.removeItem('user'); // Remove user from localStorage\n      this.$router.push('/login'); // Redirect to login page after logout\n    }\n  },\n  created() {\n    // Check if the user is logged in when the component is created\n    const user = localStorage.getItem('user');\n    if (user) {\n      this.isLoggedIn = true;\n      this.currentUser = user;\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Reset default margin and padding */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n}\n\n/* Navigation bar styles */\nnav {\n  position: fixed; /* Fixed position */\n  top: 0;\n  left: 0;\n  width: 100%; /* Full width */\n  background-color: #343a40; /* Dark background */\n  z-index: 1000; /* Ensure it's above other elements */\n}\n\nul {\n  display: flex;\n  justify-content: space-around; /* Evenly space items */\n  list-style: none; /* Remove list bullets */\n  padding: 0;\n}\n\nli {\n  margin: 0 15px; /* Space between items */\n}\n\na {\n  text-decoration: none; /* Remove underline */\n  color: white; /* White text */\n  font-weight: bold; /* Bold text */\n  font-size: 1.1rem; /* Text size */\n  padding: 10px 15px; /* Padding for better spacing */\n  transition: color 0.3s ease, transform 0.3s ease; /* Smooth transitions */\n}\n\na:hover {\n  color: #ffdd57; /* Gold color on hover */\n  transform: scale(1.1); /* Slightly enlarge links on hover */\n}\n\n/* Add padding to body to account for fixed navbar */\nbody {\n  padding-top: 60px;\n}\n\n/* Login form styles */\n.login-container {\n  max-width: 400px;\n  margin: 100px auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: #f9f9f9;\n}\n\n.login-container h2 {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.login-container form div {\n  margin-bottom: 15px;\n}\n\n.login-container label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.login-container input {\n  width: 100%;\n  padding: 8px;\n  box-sizing: border-box;\n}\n\n.login-container button {\n  width: 100%;\n  padding: 10px;\n  background-color: #343a40;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.login-container button:hover {\n  background-color: #555;\n}\n</style>"],"mappings":";AAsBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,WAAA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,YAAA;MACA;QAAAJ,QAAA;QAAAC;MAAA,SAAAF,SAAA;;MAEA;MACA,MAAAM,UAAA;QACAC,IAAA;QACAC,KAAA;MACA;;MAEA;MACA,IAAAF,UAAA,CAAAL,QAAA,KAAAK,UAAA,CAAAL,QAAA,MAAAC,QAAA;QACA,KAAAJ,UAAA;QACA,KAAAC,WAAA,GAAAE,QAAA;QACAQ,YAAA,CAAAC,OAAA,SAAAT,QAAA;QACA,KAAAE,UAAA;QACA,KAAAQ,OAAA,CAAAC,IAAA;MACA;QACA,KAAAT,UAAA;MACA;IACA;IACAU,OAAA;MACA,KAAAf,UAAA;MACA,KAAAC,WAAA;MACAU,YAAA,CAAAK,UAAA;MACA,KAAAH,OAAA,CAAAC,IAAA;IACA;EACA;EACAG,QAAA;IACA;IACA,MAAAR,IAAA,GAAAE,YAAA,CAAAO,OAAA;IACA,IAAAT,IAAA;MACA,KAAAT,UAAA;MACA,KAAAC,WAAA,GAAAQ,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}