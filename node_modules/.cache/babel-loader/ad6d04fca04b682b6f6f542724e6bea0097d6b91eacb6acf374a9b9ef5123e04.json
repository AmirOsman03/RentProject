{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  name: \"BookingsPage\",\n  data() {\n    return {\n      availableCars: [{\n        id: 1,\n        name: 'Toyota Corolla',\n        date: '2025-02-01'\n      }, {\n        id: 2,\n        name: 'BMW X5',\n        date: '2025-02-05'\n      }],\n      bookings: []\n    };\n  },\n  created() {\n    this.loadBookings();\n  },\n  methods: {\n    loadBookings() {\n      const savedBookings = JSON.parse(localStorage.getItem('bookings'));\n      if (savedBookings) {\n        this.bookings = savedBookings;\n      }\n    },\n    saveBookings() {\n      localStorage.setItem('bookings', JSON.stringify(this.bookings));\n    },\n    bookCar(car) {\n      const newBooking = {\n        id: this.bookings.length + 1,\n        car: car.name,\n        date: car.date\n      };\n      this.bookings.push(newBooking);\n      this.saveBookings();\n      alert('Booking saved successfully!');\n    },\n    cancelBooking(id) {\n      this.bookings = this.bookings.filter(booking => booking.id !== id);\n      this.saveBookings();\n      alert('Booking cancelled successfully!');\n    }\n  }\n};","map":{"version":3,"names":["name","data","availableCars","id","date","bookings","created","loadBookings","methods","savedBookings","JSON","parse","localStorage","getItem","saveBookings","setItem","stringify","bookCar","car","newBooking","length","push","alert","cancelBooking","filter","booking"],"sources":["src/views/BookingsPage.vue"],"sourcesContent":["<template>\n  <div class=\"p-4\">\n    <h1 class=\"text-2xl font-bold mb-4\">Bookings</h1>\n\n    <div v-if=\"bookings.length === 0\" class=\"text-gray-600\">\n      No bookings available.\n    </div>\n\n    <div v-else class=\"grid grid-cols-1 gap-4\">\n      <div\n        v-for=\"booking in bookings\"\n        :key=\"booking.id\"\n        class=\"border rounded-lg p-4 bg-white shadow-md flex justify-between items-center\"\n      >\n        <div>\n          <h2 class=\"font-semibold text-lg\">{{ booking.car }}</h2>\n          <p class=\"text-gray-600\">{{ booking.date }}</p>\n        </div>\n\n        <button\n          @click=\"cancelBooking(booking.id)\"\n          class=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg\"\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n\n    <div v-for=\"car in availableCars\" :key=\"car.id\">\n      <button\n        @click=\"bookCar(car)\"\n        class=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg mt-4\"\n      >\n        Book {{ car.name }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"BookingsPage\",\n  data() {\n    return {\n      availableCars: [\n        { id: 1, name: 'Toyota Corolla', date: '2025-02-01' },\n        { id: 2, name: 'BMW X5', date: '2025-02-05' },\n      ],\n      bookings: [],\n    };\n  },\n  created() {\n    this.loadBookings();\n  },\n  methods: {\n    loadBookings() {\n      const savedBookings = JSON.parse(localStorage.getItem('bookings'));\n      if (savedBookings) {\n        this.bookings = savedBookings;\n      }\n    },\n    saveBookings() {\n      localStorage.setItem('bookings', JSON.stringify(this.bookings));\n    },\n    bookCar(car) {\n      const newBooking = { id: this.bookings.length + 1, car: car.name, date: car.date };\n      this.bookings.push(newBooking);\n      this.saveBookings();\n      alert('Booking saved successfully!');\n    },\n    cancelBooking(id) {\n      this.bookings = this.bookings.filter(booking => booking.id !== id);\n      this.saveBookings();\n      alert('Booking cancelled successfully!');\n    },\n  },\n};\n</script>\n\n<style scoped>\n.grid {\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n}\n</style>\n"],"mappings":";;;AAwCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,aAAA,GACA;QAAAC,EAAA;QAAAH,IAAA;QAAAI,IAAA;MAAA,GACA;QAAAD,EAAA;QAAAH,IAAA;QAAAI,IAAA;MAAA,EACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACAD,aAAA;MACA,MAAAE,aAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,IAAAJ,aAAA;QACA,KAAAJ,QAAA,GAAAI,aAAA;MACA;IACA;IACAK,aAAA;MACAF,YAAA,CAAAG,OAAA,aAAAL,IAAA,CAAAM,SAAA,MAAAX,QAAA;IACA;IACAY,QAAAC,GAAA;MACA,MAAAC,UAAA;QAAAhB,EAAA,OAAAE,QAAA,CAAAe,MAAA;QAAAF,GAAA,EAAAA,GAAA,CAAAlB,IAAA;QAAAI,IAAA,EAAAc,GAAA,CAAAd;MAAA;MACA,KAAAC,QAAA,CAAAgB,IAAA,CAAAF,UAAA;MACA,KAAAL,YAAA;MACAQ,KAAA;IACA;IACAC,cAAApB,EAAA;MACA,KAAAE,QAAA,QAAAA,QAAA,CAAAmB,MAAA,CAAAC,OAAA,IAAAA,OAAA,CAAAtB,EAAA,KAAAA,EAAA;MACA,KAAAW,YAAA;MACAQ,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}