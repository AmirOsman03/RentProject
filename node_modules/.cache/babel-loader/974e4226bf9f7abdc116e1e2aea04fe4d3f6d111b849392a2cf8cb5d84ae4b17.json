{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { cars } from \"@/cars\";\nimport '../assets/css/styles.css';\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"HomePage\",\n  data() {\n    return {\n      location: \"\",\n      cars: cars,\n      showModal: false,\n      selectedCar: null,\n      startDate: \"\",\n      endDate: \"\",\n      hoveredCardId: null\n    };\n  },\n  computed: {\n    filteredCars() {\n      if (this.location) {\n        return this.cars.filter(car => car.location.toLowerCase().includes(this.location.toLowerCase()));\n      }\n      return this.cars;\n    },\n    totalPrice() {\n      if (this.startDate && this.endDate && this.selectedCar) {\n        const start = new Date(this.startDate);\n        const end = new Date(this.endDate);\n        const timeDiff = end - start;\n        const dayCount = timeDiff / (1000 * 3600 * 24);\n        if (dayCount < 1) return 0;\n        return this.selectedCar.price * dayCount;\n      }\n      return 0;\n    }\n  },\n  methods: {\n    openAddCarModal() {\n      this.showAddCarModal = true;\n    },\n    closeAddCarModal() {\n      this.showAddCarModal = false;\n    },\n    addNewCar() {\n      if (!this.newCar.brand || !this.newCar.model || !this.newCar.price || !this.newCar.type || !this.newCar.fuelType) {\n        Swal.fire({\n          title: \"Error\",\n          text: \"Please fill all fields.\",\n          icon: \"error\",\n          confirmButtonText: \"OK\"\n        });\n        return;\n      }\n      const newCar = {\n        id: this.cars.length + 1,\n        ...this.newCar\n      };\n\n      // Adding the new car\n      this.cars.push(newCar);\n\n      // Closing the modal\n      this.closeAddCarModal();\n      Swal.fire({\n        title: \"Success\",\n        text: `You have successfully added the ${newCar.brand} ${newCar.model}`,\n        icon: \"success\",\n        confirmButtonText: \"OK\"\n      });\n    },\n    openModal(car) {\n      this.selectedCar = car;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    confirmBooking() {\n      if (!this.startDate || !this.endDate) {\n        Swal.fire({\n          title: \"Error\",\n          text: \"Please select both start and end dates for the booking.\",\n          icon: \"error\",\n          confirmButtonText: \"OK\"\n        });\n        return;\n      }\n      if (this.endDate < this.startDate) {\n        Swal.fire({\n          title: \"Error\",\n          text: \"End date cannot be earlier than start date.\",\n          icon: \"error\",\n          confirmButtonText: \"OK\"\n        });\n        return;\n      }\n      const confirmation = window.confirm(`Are you sure you want to book from ${this.startDate} to ${this.endDate}?`);\n      if (confirmation) {\n        const booking = {\n          car: this.selectedCar,\n          startDate: this.startDate,\n          endDate: this.endDate,\n          totalPrice: this.totalPrice\n        };\n        this.myBookings.push(booking); // Add to bookings list\n        Swal.fire({\n          title: \"Success\",\n          text: `You have successfully booked the ${this.selectedCar.brand} ${this.selectedCar.model}`,\n          icon: \"success\",\n          confirmButtonText: \"OK\"\n        });\n        this.closeModal();\n      } else {\n        Swal.fire({\n          title: \"Booking canceled\",\n          text: \"Your booking was canceled.\",\n          icon: \"info\",\n          confirmButtonText: \"OK\"\n        });\n      }\n    },\n    openEditModal(car) {\n      this.editedCar = {\n        ...car\n      };\n      this.showEditModal = true;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n    },\n    saveEditedCar() {\n      const index = this.cars.findIndex(car => car.id === this.editedCar.id);\n      if (index !== -1) {\n        this.cars.splice(index, 1, this.editedCar);\n        Swal.fire({\n          title: \"Success\",\n          text: `You have successfully edited the ${this.editedCar.brand} ${this.editedCar.model}`,\n          icon: \"success\",\n          confirmButtonText: \"OK\"\n        });\n      }\n      this.closeEditModal();\n    },\n    deleteCar(carId) {\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"Do you want to delete this car?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Yes, delete it!\",\n        cancelButtonText: \"No, cancel!\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.cars = this.cars.filter(car => car.id !== carId);\n          Swal.fire({\n            title: \"Deleted!\",\n            text: \"The car has been deleted.\",\n            icon: \"success\",\n            confirmButtonText: \"OK\"\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["cars","Swal","name","data","location","showModal","selectedCar","startDate","endDate","hoveredCardId","computed","filteredCars","filter","car","toLowerCase","includes","totalPrice","start","Date","end","timeDiff","dayCount","price","methods","openAddCarModal","showAddCarModal","closeAddCarModal","addNewCar","newCar","brand","model","type","fuelType","fire","title","text","icon","confirmButtonText","id","length","push","openModal","closeModal","confirmBooking","confirmation","window","confirm","booking","myBookings","openEditModal","editedCar","showEditModal","closeEditModal","saveEditedCar","index","findIndex","splice","deleteCar","carId","showCancelButton","cancelButtonText","then","result","isConfirmed"],"sources":["src/views/HomePage.vue"],"sourcesContent":["<template>\n  <div class=\"background-page\">\n    <div class=\"container-fluid\">\n      <h1 class=\"text-center mt-4 mb-5 animate-fade-in text-white-50\">\n        Enter Your Location\n      </h1>\n\n      <!-- Location Input Form -->\n      <form @submit.prevent=\"handleSubmit\" class=\"mt-4 animate-slide-up\">\n        <div class=\"mb-3\">\n          <label for=\"location\" class=\"form-label\"></label>\n          <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"location\"\n              v-model=\"location\"\n              placeholder=\"Enter city\"\n              required\n          />\n        </div>\n      </form>\n\n      <!-- Display Cars if Location is Entered -->\n      <div v-if=\"location\" class=\"row mt-4\">\n        <div\n            class=\"col-12 col-md-4 mb-4\"\n            v-for=\"car in filteredCars\"\n            :key=\"car.id\"\n        >\n          <div\n              class=\"card shadow-lg rounded animate-fade-in\"\n              style=\"transition: transform 0.3s ease; border-radius: 15px\"\n              @mouseenter=\"hoverCard(car.id)\"\n              @mouseleave=\"unhoverCard(car.id)\"\n              :class=\"{ 'hovered-card': hoveredCardId === car.id }\"\n          >\n            <img\n                :src=\"require(`@/assets/images/${car.image}`)\"\n                class=\"card-img-top rounded-top\"\n                alt=\"Car image\"\n            />\n            <div class=\"card-body\">\n              <h5 class=\"car-title text-center\">\n                <span class=\"car-brand\">{{ car.brand }} </span>\n                <span class=\"car-model\">{{ car.model }}</span>\n              </h5>\n              <p class=\"card-text\">\n                <strong>Location:</strong> {{ car.location }} <br/>\n                <strong>Type:</strong> {{ car.type }} <br/>\n                <strong>Year:</strong> {{ car.productionYear }} <br/>\n                <strong>Price:</strong> ${{ car.price }} <br/>\n                <strong>Fuel Type:</strong> {{ car.fuelType }}\n              </p>\n              <button class=\"btn btn-primary w-100\" @click=\"openModal(car)\">\n                Book Now\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal for Booking Dates -->\n    <div\n        v-if=\"showModal\"\n        class=\"modal fade show\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n        style=\"display: block;\"\n    >\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content card shadow-lg rounded p-4 animate-fade-in\">\n          <div class=\"modal-body\">\n            <h6>Select your booking dates:</h6>\n            <div class=\"form-group\">\n              <label for=\"startDate\">From:</label>\n              <input\n                  type=\"date\"\n                  v-model=\"startDate\"\n                  class=\"form-control\"\n                  min=\"2025-01-01\"\n                  required\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"endDate\">To:</label>\n              <input\n                  type=\"date\"\n                  v-model=\"endDate\"\n                  class=\"form-control\"\n                  :min=\"startDate\"\n                  required\n              />\n            </div>\n            <div v-if=\"totalPrice > 0\" class=\"mt-3\">\n              <strong>Total Price:</strong> ${{ totalPrice }}\n            </div>\n          </div>\n          <div class=\"modal-footer justify-content-center\">\n            <button\n                type=\"button\"\n                class=\"btn btn-secondary rounded-pill\"\n                @click=\"closeModal\"\n            >\n              Close\n            </button>\n            <button\n                type=\"button\"\n                class=\"btn btn-success rounded-pill\"\n                @click=\"confirmBooking\"\n                :disabled=\"\n                    !startDate ||\n                    !endDate ||\n                    new Date(startDate) >= new Date(endDate)\n                \"\n            >\n              Confirm Booking\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {cars} from \"@/cars\";\nimport '../assets/css/styles.css'\nimport Swal from \"sweetalert2\";\n\nexport default {\n  name: \"HomePage\",\n  data() {\n    return {\n      location: \"\",\n      cars: cars,\n      showModal: false,\n      selectedCar: null,\n      startDate: \"\",\n      endDate: \"\",\n      hoveredCardId: null,\n    };\n  },\n  computed: {\n    filteredCars() {\n      if (this.location) {\n        return this.cars.filter((car) =>\n            car.location.toLowerCase().includes(this.location.toLowerCase())\n        );\n      }\n      return this.cars;\n    },\n    totalPrice() {\n      if (this.startDate && this.endDate && this.selectedCar) {\n        const start = new Date(this.startDate);\n        const end = new Date(this.endDate);\n        const timeDiff = end - start;\n        const dayCount = timeDiff / (1000 * 3600 * 24);\n        if (dayCount < 1) return 0;\n        return this.selectedCar.price * dayCount;\n      }\n      return 0;\n    },\n  },\n  methods: {\n    openAddCarModal() {\n      this.showAddCarModal = true;\n    },\n    closeAddCarModal() {\n      this.showAddCarModal = false;\n    },\n    addNewCar() {\n      if (\n          !this.newCar.brand ||\n          !this.newCar.model ||\n          !this.newCar.price ||\n          !this.newCar.type ||\n          !this.newCar.fuelType\n      ) {\n        Swal.fire({\n          title: \"Error\",\n          text: \"Please fill all fields.\",\n          icon: \"error\",\n          confirmButtonText: \"OK\",\n        });\n        return;\n      }\n\n      const newCar = {\n        id: this.cars.length + 1,\n        ...this.newCar,\n      };\n\n      // Adding the new car\n      this.cars.push(newCar);\n\n      // Closing the modal\n      this.closeAddCarModal();\n\n      Swal.fire({\n        title: \"Success\",\n        text: `You have successfully added the ${newCar.brand} ${newCar.model}`,\n        icon: \"success\",\n        confirmButtonText: \"OK\",\n      });\n    },\n    openModal(car) {\n      this.selectedCar = car;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    confirmBooking() {\n      if (!this.startDate || !this.endDate) {\n        Swal.fire({\n          title: \"Error\",\n          text: \"Please select both start and end dates for the booking.\",\n          icon: \"error\",\n          confirmButtonText: \"OK\",\n        });\n        return;\n      }\n\n      if (this.endDate < this.startDate) {\n        Swal.fire({\n          title: \"Error\",\n          text: \"End date cannot be earlier than start date.\",\n          icon: \"error\",\n          confirmButtonText: \"OK\",\n        });\n        return;\n      }\n\n      const confirmation = window.confirm(\n          `Are you sure you want to book from ${this.startDate} to ${this.endDate}?`\n      );\n\n      if (confirmation) {\n        const booking = {\n          car: this.selectedCar,\n          startDate: this.startDate,\n          endDate: this.endDate,\n          totalPrice: this.totalPrice,\n        };\n        this.myBookings.push(booking); // Add to bookings list\n        Swal.fire({\n          title: \"Success\",\n          text: `You have successfully booked the ${this.selectedCar.brand} ${this.selectedCar.model}`,\n          icon: \"success\",\n          confirmButtonText: \"OK\",\n        });\n        this.closeModal();\n      } else {\n        Swal.fire({\n          title: \"Booking canceled\",\n          text: \"Your booking was canceled.\",\n          icon: \"info\",\n          confirmButtonText: \"OK\",\n        });\n      }\n    },\n    openEditModal(car) {\n      this.editedCar = { ...car };\n      this.showEditModal = true;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n    },\n    saveEditedCar() {\n      const index = this.cars.findIndex((car) => car.id === this.editedCar.id);\n      if (index !== -1) {\n        this.cars.splice(index, 1, this.editedCar);\n        Swal.fire({\n          title: \"Success\",\n          text: `You have successfully edited the ${this.editedCar.brand} ${this.editedCar.model}`,\n          icon: \"success\",\n          confirmButtonText: \"OK\",\n        });\n      }\n      this.closeEditModal();\n    },\n    deleteCar(carId) {\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"Do you want to delete this car?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Yes, delete it!\",\n        cancelButtonText: \"No, cancel!\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.cars = this.cars.filter((car) => car.id !== carId);\n          Swal.fire({\n            title: \"Deleted!\",\n            text: \"The car has been deleted.\",\n            icon: \"success\",\n            confirmButtonText: \"OK\",\n          });\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.background-page {\n  position: relative;\n  background: url('@/assets/images/paris.jpg') no-repeat center center fixed;\n  background-size: cover;\n  min-height: 100vh;\n  padding-top: 20px;\n  overflow: hidden;\n}\n\n.background-page::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3); /* Dark overlay for better visibility */\n  backdrop-filter: blur(2px); /* Blur effect */\n  z-index: 1;\n}\n\n.container-fluid {\n  position: relative;\n  z-index: 2;\n}\n\n.mt-4 {\n  margin-bottom: 1.5rem;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}